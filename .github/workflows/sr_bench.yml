name: SRBench

on:
  workflow_dispatch:

env: 
  CACHE_NUMBER: 0
defaults:
  run:
    shell: bash
    working-directory: .
  
jobs:
  
  bb:
    runs-on: ubuntu-20.04
    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          miniforge-version: latest
          activate-environment: ""
          
      - name: Install SRBench
        run: |
                echo "Install SRBench"
                ls
                pwd
                
                wget https://github.com/janoPig/pmlb/archive/refs/heads/master.zip
                unzip master.zip
                mv pmlb-master pmlb
                
                # clone srbench
                mkdir srbench
                cd srbench
                git clone https://github.com/kartelj/srbench.git
                cd srbench
                pwd 
                ls
                git checkout git_workflow

                # current branch
                line_old='git+https://github.com/BRANCH_PLACEHOLDER'
                line_new='rils-rols==1.5.4'
                sed -i "s%$line_old%$line_new%g" environment.yml
                conda env create -f environment.yml

      - name: BB experiment
        run: |
                echo "BB experiment"
                pwd

                # install enviroment
                conda init bash
                source ~/.bashrc # restart terminal
                conda activate srbench
                conda info
                
                cd srbench/srbench/experiment
                for METHOD in "RILS-ROLS_1MOPS" ; do
                    python analyze.py ../../../pmlb/datasets -n_trials 1 -ml $METHOD -results ../results_blackbox -skip_tuning --local -n_jobs 10 -job_limit 100000
                done
                
                cd ../postprocessing

                python collate_blackbox_results.py ../results_blackbox
                
                read -p "Press [Enter] to terminate container."

            
  gt:
    runs-on: ubuntu-20.04
    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          miniforge-version: latest
          activate-environment: ""
          
      - name: Install SRBench
        run: |
                echo "Install SRBench"
                ls
                pwd
                
                wget https://github.com/janoPig/pmlb/archive/refs/heads/master.zip
                unzip master.zip
                mv pmlb-master pmlb
                
                # clone srbench
                mkdir srbench
                cd srbench
                git clone https://github.com/kartelj/srbench.git
                cd srbench
                pwd 
                ls
                git checkout git_workflow

                # current branch
                line_old='git+https://github.com/BRANCH_PLACEHOLDER'
                line_new='rils-rols==1.5.4'
                sed -i "s%$line_old%$line_new%g" environment.yml
                conda env create -f environment.yml

      - name: GT experiment
        run: |
                echo "GT experiment"
                pwd

                # install enviroment
                conda init bash
                source ~/.bashrc # restart terminal
                conda activate srbench
                conda info
                
                cd srbench/srbench/experiment
                for METHOD in "RILS-ROLS_1MOPS" ; do 
                    for TN in 0 ; do # 0.001 0.01 0.1
                        # submit the ground-truth dataset experiment. 
                        for data in "../../../pmlb/datasets/strogatz_" "../../../pmlb/datasets/feynman_" ; do # feynman and strogatz datasets
                            python analyze.py $data"*" -results ../results_sym_data -n_trials 10 -ml $METHOD --local -target_noise $TN -sym_data -job_limit 100000 -skip_tuning -n_jobs 10 --noskips
                            if [ $? -gt 0 ] ; then
                                break
                            fi
                        done
                        
                        
                        for data in "../../../pmlb/datasets/strogatz_" "../../../pmlb/datasets/feynman_" ; do # feynman and strogatz datasets
                            python analyze.py -script assess_symbolic_model $data"*" -results ../results_sym_data -target_noise $TN -ml $METHOD --local -sym_data -n_trials 10 -job_limit 100000 -n_jobs 10 --noskips
                                if [ $? -gt 0 ] ; then
                                    break
                                fi
                        done
                    done
                done
                
                cd ../postprocessing

                python collate_groundtruth_results.py ../results_sym_data
                
                read -p "Press [Enter] to terminate container."
